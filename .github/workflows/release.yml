name: Release Magisk Module

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  validate-release:
    name: Validate Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Validate tag format
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          if [[ ! $TAG =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
            echo "Invalid tag format: $TAG"
            exit 1
          fi
          echo "Valid tag format: $TAG"

      - name: Verify tag signature
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          if git verify-tag "$TAG" 2>/dev/null; then
            echo "✅ Tag $TAG has a valid GPG signature"
          else
            echo "⚠️  Warning: Tag $TAG is not GPG signed"
          fi

      - name: Check for changelog entry
        run: |
          if [ -f CHANGELOG.md ]; then
            VERSION=${GITHUB_REF#refs/tags/}
            if ! grep -q "$VERSION" CHANGELOG.md; then
              echo "Warning: No changelog entry found for $VERSION"
            fi
          fi

  build-release:
    name: Build Release Module
    runs-on: ubuntu-latest
    needs: validate-release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 21
          check-latest: true

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          gradle-version: wrapper
          build-scan-publish: true
          build-scan-terms-of-use-url: 'https://gradle.com/terms-of-service'
          build-scan-terms-of-use-agree: 'yes'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build release modules
        run: |
          ./gradlew :inject:assembleRelease --scan --build-cache
          ./gradlew :zygisk:assembleRelease --scan --build-cache
          ./gradlew zip --scan

      - name: Generate checksums
        run: |
          cd out
          sha256sum PlayIntegrityFix.zip > PlayIntegrityFix.zip.sha256
          md5sum PlayIntegrityFix.zip > PlayIntegrityFix.zip.md5

      - name: Upload release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            out/PlayIntegrityFix.zip*
          retention-days: 90

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build-release
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Download artifacts
        uses: actions/download-artifact@v5
        with:
          name: release-artifacts
          path: artifacts/

      - name: Generate release notes
        id: release_notes
        run: |
          if [ -f CHANGELOG.md ]; then
            VERSION=${GITHUB_REF#refs/tags/}
            awk "/^## \[$VERSION\]/{flag=1; next} /^## \[/{flag=0} flag" CHANGELOG.md > release_notes.md
          else
            echo "Release $VERSION" > release_notes.md
            echo "" >> release_notes.md
            echo "### Changes" >> release_notes.md
            git log --oneline --since="1 month ago" --pretty=format:"- %s" >> release_notes.md
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body_path: release_notes.md
          files: |
            artifacts/*
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') }}
          generate_release_notes: true
          make_latest: true
