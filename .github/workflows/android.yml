name: Android CI

on:
  push:
    branches: [master]
    paths-ignore: ['**.md', '**.txt', 'LICENSE']
  pull_request:
    branches: [master]
  workflow_dispatch:

permissions:
  contents: write

env:
  GRADLE_OPTS: '-Dorg.gradle.jvmargs=-Xmx2g -Dorg.gradle.daemon=false'

jobs:
  validate:
    name: Validate Build Environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-depth: 1

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v5

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          submodules: recursive
          fetch-depth: 1

      - name: Setup JDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 21
          check-latest: true

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5
        with:
          gradle-version: wrapper
          cache-read-only: ${{ github.ref != 'refs/heads/master' }}
          cache-cleanup: on-success
          build-scan-publish: true
          build-scan-terms-of-use-url: 'https://gradle.com/terms-of-service'
          build-scan-terms-of-use-agree: 'yes'
          add-job-summary: always

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Magisk module
        run: ./gradlew assembleRelease --scan --build-cache --refresh-dependencies

      - name: Verify module structure
        run: |
          echo "Generated module package:"
          ls -la out/
          echo "Module contents verification:"
          unzip -l out/PlayIntegrityFix.zip | head -20

      - name: Upload module package
        uses: actions/upload-artifact@v4
        with:
          name: PlayIntegrityFix_${{ github.run_number }}
          path: module/*
          compression-level: 0

  dependency-analysis:
    name: Dependency Analysis
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup JDK
        uses: actions/setup-java@v5
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Generate dependency graph
        uses: gradle/actions/dependency-submission@v5
        with:
          build-scan-publish: true
          build-scan-terms-of-use-url: 'https://gradle.com/terms-of-service'
          build-scan-terms-of-use-agree: 'yes'
